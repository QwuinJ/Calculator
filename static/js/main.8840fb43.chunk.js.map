{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","sum","setSum","isError","message","error","setError","className","calcButtons","map","item","index","style","onClick","val","joinedSum","join","newSum","evaluate","storedSum","err","handleButton","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ivBAqDeA,EAjDH,WAAO,IAAD,EACKC,mBAAS,CAAC,KADf,mBACVC,EADU,KACLC,EADK,OAESF,mBAAS,CAAEG,SAAS,EAAOC,QAAS,KAF7C,mBAEVC,EAFU,KAEHC,EAFG,KAuBjB,OACC,sBAAKC,UAAU,MAAf,UACC,yCACCF,EAAMF,SAAW,gEAClB,sBAAKI,UAAU,UAAf,UACC,qBAAKA,UAAU,SAAf,SAAyBN,IACzB,qBAAKM,UAAU,YAAf,SACC,qBAAKA,UAAU,UAAf,SACEC,EAAYC,KAAI,SAACC,EAAMC,GAAP,OAChB,wBACCJ,UAAWG,EAAKE,MAEhBC,QAAS,YA/BK,SAACC,GACrB,IAEC,GADAR,EAAS,CAAEH,SAAS,EAAOC,QAAS,KACxB,MAARU,EAAa,CAChB,IACIC,EADS,YAAOd,GACMe,KAAK,IAC3BC,EAASC,YAASH,GACtBb,EAAO,CAACe,SACF,GAAY,UAARH,EACVZ,EAAO,CAAC,SACF,CACN,IAAIiB,EAAS,sBAAOlB,GAAP,CAAYa,IACzBZ,EAAOiB,IAEP,MAAOC,GACRd,EAAS,CAAEH,SAAS,EAAMC,QAASgB,IACnClB,EAAO,CAAC,MAgBFmB,CAAaX,EAAKI,MAJpB,SAOEJ,EAAKI,KALDH,iBC1BEW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAMzBb,M","file":"static/js/main.8840fb43.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport calcButtons from \"./buttons.json\";\nimport { evaluate } from \"mathjs\";\n\nconst App = () => {\n\tconst [sum, setSum] = useState([\"\"]);\n\tconst [error, setError] = useState({ isError: false, message: \"\" });\n\n\tconst handleButton = (val) => {\n\t\ttry {\n\t\t\tsetError({ isError: false, message: \"\" });\n\t\t\tif (val === \"=\") {\n\t\t\t\tlet storedSum = [...sum];\n\t\t\t\tlet joinedSum = storedSum.join(\"\");\n\t\t\t\tlet newSum = evaluate(joinedSum);\n\t\t\t\tsetSum([newSum]);\n\t\t\t} else if (val === \"clear\") {\n\t\t\t\tsetSum([\"\"]);\n\t\t\t} else {\n\t\t\t\tlet storedSum = [...sum, val];\n\t\t\t\tsetSum(storedSum);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tsetError({ isError: true, message: err });\n\t\t\tsetSum([\"\"]);\n\t\t}\n\t};\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<h1>CN Calc</h1>\n\t\t\t{error.isError && <div>You can't do that. try again.</div>}\n\t\t\t<div className=\"wrapper\">\n\t\t\t\t<div className=\"screen\">{sum}</div>\n\t\t\t\t<div className=\"buttonBox\">\n\t\t\t\t\t<div className=\"buttons\">\n\t\t\t\t\t\t{calcButtons.map((item, index) => (\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclassName={item.style}\n\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\thandleButton(item.val);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{item.val}\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}